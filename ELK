#!/bin/bash

#Отключаем то, что может нам мешать
setenforce 0
systemctl stop firewalld

#Устанавливаем нужное ПО
yum install epel-release -y
yum install ntp ntpdate httpd -y
systemctl enable ntpd httpd
systemctl start ntpd httpd
ntpdate -s ntp.ubuntu.com
sleep 15

rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch
echo "[elasticsearch]
name=Elasticsearch repository for 7.x packages
baseurl=https://artifacts.elastic.co/packages/7.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=0
autorefresh=1
type=rpm-md" > /etc/yum.repos.d/elasticsearch.repo

echo "[kibana-7.x]
name=Kibana repository for 7.x packages
baseurl=https://artifacts.elastic.co/packages/7.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md" > /etc/yum.repos.d/kibana.repo

yum install elasticsearch kibana logstash filebeat -y
/usr/share/logstash/bin/system-install /etc/logstash/startup.options systemd
systemctl daemon-reload
systemctl enable elasticsearch kibana 
systemctl start elasticsearch 
echo 'server.host: "0.0.0.0"' >> /etc/kibana/kibana.yml
systemctl start kibana

echo 'input {
  beats {
    port => 5044
  }
}' > /etc/logstash/conf.d/input.conf

echo 'output {
elasticsearch {
hosts => [ "localhost:9200" ]
        manage_template => false
        index => "nginx-%{+YYYY.MM.dd}"
    }
}' > /etc/logstash/conf.d/output.conf

echo 'filter {
  if [fileset][module] == "nginx" {
    if [fileset][name] == "access" {
      grok {
        match => { "message" => ["%{IPORHOST:[nginx][access][remote_ip]} - %{DATA:[nginx][access][user_name]} \[%{HTTPDATE:[nginx][access][time]}\] \"%{WORD:[nginx][access][method]} %{DATA:[nginx][access][url]} HTTP/%{NUMBER:[nginx][access][http_version]}\" %{NUMBER:[nginx][access][response_code]} %{NUMBER:[nginx][access][body_sent][bytes]} \"%{DATA:[nginx][access][referrer]}\" \"%{DATA:[nginx][access][agent]}\""] }
        remove_field => "message"
      }
      mutate {
        add_field => { "read_timestamp" => "%{@timestamp}" }
      }
      date {
        match => [ "[nginx][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
        remove_field => "[nginx][access][time]"
      }
      useragent {
        source => "[nginx][access][agent]"
        target => "[nginx][access][user_agent]"
        remove_field => "[nginx][access][agent]"
      }
      geoip {
        source => "[nginx][access][remote_ip]"
        target => "[nginx][access][geoip]"
      }
    }
    else if [fileset][name] == "error" {
      grok {
        match => { "message" => ["%{DATA:[nginx][error][time]} \[%{DATA:[nginx][error][level]}\] %{NUMBER:[nginx][error][pid]}#%{NUMBER:[nginx][error][tid]}: (\*%{NUMBER:[nginx][error][connection_id]} )?%{GREEDYDATA:[nginx][error][message]}"] }
        remove_field => "message"
      }
      mutate {
        rename => { "@timestamp" => "read_timestamp" }
      }
      date {
        match => [ "[nginx][error][time]", "YYYY/MM/dd H:m:s" ]
        remove_field => "[nginx][error][time]"
      }
    }
  }
}' > /etc/logstash/conf.d/filter.conf

systemctl start logstash

mv /etc/filebeat/modules.d/nginx.yml.disabled /etc/filebeat/modules.d/nginx.yml

echo '
- module: nginx
  access:
    enabled: true
    var.paths: ["/path/to/log/nginx/access.log*"]
  error:
    enabled: true
    var.paths: ["/var/log/httpd/error_log*"]
' > /etc/filebeat/modules.d/nginx.yml

sed -i '176 s/.*/#output.elasticsearch:/' /etc/filebeat/filebeat.yml
sed -i '178 s/.*/  #hosts: ["localhost:9200"]/' /etc/filebeat/filebeat.yml
sed -i '189 s/.*/output.logstash:/' /etc/filebeat/filebeat.yml
sed -i '191 s/.*/  hosts: ["localhost:5044"]/' /etc/filebeat/filebeat.yml

systemctl enable filebeat
systemctl start filebeat
